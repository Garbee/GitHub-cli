name: Build

on:
  push:
    branches: [ main ]

permissions:
  contents: read

env:
  IMAGE_NAME: github-cli

jobs:
  build-platform:
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
            runner: ubuntu-latest
          - arch: arm64
            platform: linux/arm64
            runner: ubuntu-24.04-arm
    name: Build (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract GH_VERSION from Dockerfile
        id: version
        run: |
          set -euo pipefail
          v=$(grep -E '^ARG GH_VERSION=' Dockerfile | head -1 | cut -d= -f2 | tr -d '"')
          echo "gh_version=$v" >> "$GITHUB_OUTPUT"

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (no push) and export tar
        id: build
        run: |
          set -euo pipefail
          arch='${{ matrix.arch }}'
          platform='${{ matrix.platform }}'
            version='${{ steps.version.outputs.gh_version }}'
          echo "Building gh-cli $version for $platform (arch=$arch)"
          out_dir="out-$arch"
          mkdir -p "$out_dir"
          # Produce a docker archive tar containing the single-arch image.
          docker buildx build \
            --platform "$platform" \
            --build-arg GH_VERSION="$version" \
            -t gh-cli-temp:$arch \
            --output type=docker,dest="$out_dir/gh-cli-${arch}.tar" .
          printf 'arch=%s\nversion=%s\n' "$arch" "$version" > "$out_dir/image-${arch}.txt"
          echo "arch=$arch" >> "$GITHUB_OUTPUT"
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Upload build artifact (image + metadata)
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.arch }}
          retention-days: 2
          path: out-${{ matrix.arch }}
